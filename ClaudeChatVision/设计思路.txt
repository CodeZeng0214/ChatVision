设计思路：

【系统概述】
我正在制作一个基于大语言模型能够完成图像识别类任务的聊天机器人。
聊天机器人的聊天实现是通过调用现今常见的大语言模型的api。
比如ChatGPT（目前的api密钥及网站如下
BASE_URL = "https://api.chatanywhere.tech/v1" # 默认语义大模型网站
API_KEY = "sk-AencKA6Oy7WnhukWgquDlbis89fhQ5q4Nz8ba4BvYJUjy8LR" # 默认网站密钥
GPT_MODEL = 'gpt-4o-mini' # 默认GPT模型）

【技术思路】
如果只调用ChaGPT的api聊天是不能完成复杂的图像识别任务的。
所以我的构想是借助插件式的图像识别任务模块，比如，常见的YOLO图像识别、姿态估计等等模块，以及能够描述图像内容的BLIP模块，我的设想是这些模块作为聊天机器人能够完成的任务附加在聊天机器人上，在用户输入内容时，聊天机器人会理解用户的意图，选择合适的任务模块执行，获取图像识别类任务的结果，然后再整理用户需要的信息，用自然的语言回答用户。

【界面设计】
聊天界面的具体要求：
基于QtPyside6实现一个类似于微信聊天的对话界面。
主体是上部的聊天窗口，用于显示聊天内容；以及下部的输入框，用于用户输入内容。用户和对方的消息分布在聊天窗口两侧，每条聊天内容由名称和文本框构成，注意这个文本框可以含图片；
下部含一个聊天输入框和发送按钮，用于用户输入聊天内容并发送。另外还要有一个选择图片或者视频文件的地方，用户输入好聊天内容，选择好要发送的图片之后（可以不选文件直接发送），按下发送按钮即可发送一条聊天信息
在实际的聊天过程中，当用户发送信息时，会发送到聊天窗口内（位于右侧），如果用户是选择好图片发送的，那发送的时候会将图片和输入框里的内容合并为一个聊天信息发送出去。
如果用户发送了视频，视频在聊天窗口内不会立即播放，不过会在聊天窗口内的消息处显示为静态图片，用户点击就可以播放。
现阶段只考虑对方会在收到用户的输入后返回一个666，位于在聊天窗口左侧。
后续的聊天界面还应该支持聊天记录以及新开一个聊天

【插件管理】
除了聊天界面，还应该有一个管理任务模块插件的管理器界面，这个管理器能够开关聊天机器人能够执行的任务，并且对每个任务的详细参数进行设置，比如YOLO任务模块的默认模型，默认结果保存目录等等参数。

【侧边栏设计】
另外，我觉得还应该有一个侧边栏，用于展示识别前后的结果。这里首先不仅能展示图片、视频，还能够展示实时的视频流，比如摄像头。

【参数交互】
不过这时遇到了一个阻碍，就是有时候用户输入任务后参数设置不完整，应该让聊天机器人主动引导用户补充参数，比如用户没有输入图片，那在侧边栏的下部应该及时浮现一个实时的图片选择按钮。
再比如聊天机器人附加了一个能够对摄像头实时处理的模块，用户输入了摄像头处理的文本，但没有指定实时处理哪个摄像头，那么侧边栏下部应该复现对应的摄像头信息输入或者选择按钮。
